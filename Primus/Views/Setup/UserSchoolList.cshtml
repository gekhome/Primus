@model IEnumerable<Primus.Models.UserSchoolViewModel>
@using Primus.DAL;


@{
    ViewBag.Title = "Λογαριασμοί Σχολείων";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<style>
    .k-grid .k-alt {
        background-color: #e9e9e9; /* specify the alternate background-color */
    }
</style>

@Html.AntiForgeryToken()
<div class="page-header" style="margin:5px 60px 10px 60px">
    <span style="margin:5px 60px 5px 0px;font-family:'Segoe UI';font-size:large;text-shadow:1px 1px #000000">
        <font style="color:#494949;float:left;font-family:'Segoe UI'">Λίστα λογαριασμών σχολείων</font>
    </span>
    <span style="margin:5px 10px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px">@Html.ActionLink("Επιστροφή", "Index", "Admin", null, new { @class = "btn btn-warning", style = "font-size:14px" })</span>
    <button class="btn btn-success" style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px" onclick="RefreshGrid()">Ανανέωση</button>
    <span style="margin:5px 5px 5px 10px;float:right;font-family:'Segoe UI';font-size:14px">@Html.ActionLink("Εκτύπωση", "SchoolAccountsPrint", "Setup", null, new { @class = "btn btn-primary", style = "font-size:14px", target = "_blank" })</span>
    <span style="margin:5px 5px 5px 10px;float:right;font-family:'Segoe UI';font-size:14px">@Html.ActionLink("Αλλαγή κωδικών", "CreatePasswords", "Setup", null, new { @class = "btn btn-danger", style = "font-size:14px" })</span>
</div>

<div class="body-content" style="margin:5px 60px 5px 60px">
    @(Html.Kendo().Grid(Model)
        .Name("Grid")
        .Columns(columns =>
        {
            columns.Bound(c => c.USERNAME).Groupable(false).Width(40);
            columns.Bound(c => c.PASSWORD).Groupable(false).Width(30);
            columns.ForeignKey(c => c.USER_SCHOOLID, (IEnumerable<ΣΥΣ_ΣΧΟΛΕΣ>)ViewData["schools"], "SCHOOL_ID", "SCHOOL_NAME").Title("Σχολική Μονάδα").Width(60);

            columns.Bound(c => c.ISACTIVE).Width(20).ClientTemplate("<input type='checkbox' #= ISACTIVE ? checked='checked' : '' # ></input>").Width(20); ;
            columns.Command(command => command.Destroy().Text("Διαγραφή")).Width(32);
        })
        .ToolBar(toolBar =>
        {
            toolBar.Create();
            toolBar.Save();
        })
        .Editable(editable => editable.Mode(GridEditMode.InCell))
        .Filterable()
        .Selectable()
        .Scrollable(scr => scr.Height(400))
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(5))
        .DataSource(datasource => datasource
        .Ajax()
        .Batch(true)
        .PageSize(20)
        .ServerOperation(false)
        .Events(events => events.Error("error_handler"))
        .Model(model =>
        {
            model.Id(p => p.USER_ID);
            model.Field(p => p.USER_SCHOOLID).DefaultValue(1);
        })
            .Create("UserSchool_Create", "Setup")
            .Read(read => read.Action("UserSchool_Read", "Setup"))
            .Update("UserSchool_Update", "Setup")
            .Destroy("UserSchool_Destroy", "Setup")
            .Aggregates(a =>
            {
                a.Add(p => p.USERNAME).Count();
            })
        )
        .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
    )
</div>

<script type="text/javascript">

    function RefreshGrid(e) {
        var grid = $("#Grid").data("kendoGrid");
        grid.dataSource.read();
    }
</script>






